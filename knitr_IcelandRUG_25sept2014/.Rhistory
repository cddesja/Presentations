dim(all.kv)
fdf <- select(fdf, tegund, ageclass.length..yr., Linf, tmax, Lmax, L.W.a, L.W.b, Mature)
fdf_m <- na.omit(fdf)
wss <- (nrow(fdf_m)-1)*sum(apply(fdf_m,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(fdf_m,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
fit <- kmeans(fdf_m, 3)
mydata <- data.frame(fdf_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
mydata[mydata$fit.cluster == 3,]
fdf <- select(fdf, tegund, ageclass.length..yr., tmax, Lmax, L.W.a, L.W.b, Mature)
fdf_m <- na.omit(fdf)
wss <- (nrow(fdf_m)-1)*sum(apply(fdf_m,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(fdf_m,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
fit <- kmeans(fdf_m, 3)
mydata <- data.frame(fdf_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
mydata[mydata$fit.cluster == 1,]
fit <- kmeans(fdf_m[,-1], 3)
mydata <- data.frame(fdf_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
head(fdf_m)
head(fdf_m[,-1])
fdf <- select(fdf, tegund, tmax, Lmax, L.W.a, L.W.b, Mature)
fdf_m <- na.omit(fdf)
wss <- (nrow(fdf_m)-1)*sum(apply(fdf_m,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(fdf_m,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
fit <- kmeans(fdf_m[,-1], 3)
mydata <- data.frame(fdf_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
fit <- kmeans(fdf_m[,-1], 2)
mydata <- data.frame(fdf_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
fit <- kmeans(fdf_m[,-1], 4)
mydata <- data.frame(fdf_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
fit <- kmeans(fdf_m[,-1], 2)
fit <- kmeans(fdf_m[,-1], 3)
mydata <- data.frame(fdf_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
mydata
mydata[,c(1,ncol(mydata))]
fdf <- dat[89,-c(1,2)]
FDF
fdf
144-92
52+89
fmp <- dat[89:141,-c(1,2)]
tail(fmp)
fmp <- dat[89:139,-c(1,2)]
fmp <- select(fmp, tegund, tmax, Lmax, L.W.a, L.W.b, Mature)
fmp_m <- na.omit(fmp)
fmp <- dat[89:139,-c(1,2)]
fmp <- select(fmp, tegund, tmax, Lmax, L.W.a, L.W.b, Mature)
fmp_m <- na.omit(fmp)
wss <- (nrow(fmp_m)-1)*sum(apply(fmp_m,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(fmp_m,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
fit <- kmeans(fmp_m[,-1], 3)
mydata <- data.frame(fmp_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
fit <- kmeans(fmp_m[,-1], 4)
mydata <- data.frame(fmp_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
fit <- kmeans(fmp_m[,-1], 2)
mydata <- data.frame(fmp_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
mydata[mydata$fit.cluster == 2,]
dat <- read.xls("Dropbox/hi/atlantis/iceland_atlantis/helper_files/IAbioparams.xls", sheet = "Vert_Statistics", verbose = T, skip = 1)
fmp <- dat[89:139,-c(1,2)]
fmp <- select(fmp, tegund, tmax, Lmax, L.W.a, L.W.b, Mature)
fmp_m <- na.omit(fmp)
wss <- (nrow(fmp_m)-1)*sum(apply(fmp_m,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(fmp_m,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
fmp <- dat[89:138,-c(1,2)]
fmp <- select(fmp, tegund, tmax, Lmax, L.W.a, L.W.b, Mature)
fmp_m <- na.omit(fmp)
wss <- (nrow(fmp_m)-1)*sum(apply(fmp_m,2,var))
for (i in 2:14) wss[i] <- sum(kmeans(fmp_m,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
wss <- (nrow(fmp_m)-1)*sum(apply(fmp_m,2,var))
for (i in 2:14) wss[i] <- sum(kmeans(fmp_m,
centers=i)$withinss)
plot(1:14, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
fit <- kmeans(fmp_m[,-1], 2)
mydata <- data.frame(fmp_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
fit <- kmeans(fmp_m[,-1], 3)
mydata <- data.frame(fmp_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
fit <- kmeans(fmp_m[,-1], 2)
mydata <- data.frame(fmp_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
dat <- dat[,1:45]
fdf <- dat[29:87,-c(1,2)]
fdf <- select(fdf, tegund, tmax, Lmax, L.W.a, L.W.b, Mature)
fdf_m <- na.omit(fdf)
wss <- (nrow(fdf_m)-1)*sum(apply(fdf_m,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(fdf_m,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
fit <- kmeans(fdf_m[,-1], 3)
mydata <- data.frame(fdf_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
fit <- kmeans(fdf_m[,-1], 2)
mydata <- data.frame(fdf_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
mydata
fit <- kmeans(fdf_m[,-1], 3)
mydata <- data.frame(fdf_m, fit$cluster)
head(mydata)
table(mydata$fit.cluster)
mydata
14*62.005010
868.0701/1000
contours <- readOGR(dsn = "/Users/chris/Github/atlantis_iceland/ia_shapefiles/wgs84/", layer = "iceland_contoursWGS84_noland.shp")
library(rgdal)
contours <- readOGR(dsn = "/Users/chris/Github/atlantis_iceland/ia_shapefiles/wgs84/", layer = "iceland_contoursWGS84_noland.shp")
iceland <- readOGR(dsn = "C:/Users/jim/Documents/R/Noland", layer = "island_poly_WGS84")
iceland <- readOGR(dsn = "~/Github/atlantis_iceland/ia_shapefiles/wgs84/", layer = "island_poly_WGS84")
iceland <- readOGR(dsn = "/Users/chris/Github/atlantis_iceland/ia_shapefiles/wgs84/", layer = "island_poly_WGS84")
iceland <- readOGR(dsn = "~/Github/atlantis_iceland/ia_shapefiles/wgs84/", layer = "island_poly_WGS84")
iceland <- readOGR(dsn = "/Users/chris/Github/atlantis_iceland/ia_shapefiles/wgs84/", layer = "island_poly_WGS84.shp")
iceland <- readOGR(dsn = "/Users/chris/Github/atlantis_iceland/ia_shapefiles/wgs84", layer = "island_poly_WGS84")
getwd()
library(reshape)
install.packages("reshape)")
install.packages("reshape")
install.packages("multcomp")
?xtable
library(xtable)
?print.xtable
?xtable
install.packages("ora")
library(geo)
data <- read.csv(file = "~/Dropbox/hi/atlantis/hafro_data/nephrops/afli00") #c(64.00, -23.00)
data <- read.csv(file = "~/Dropbox/hi/atlantis/hafro_data/nephrops/afli00.csv") #c(64.00, -23.00)
head(data)
junk <- inside.reg.bc(data, only.sv.1to10 = T,
ignore.latlon = F, ignore.area0 = F) # library geo
head(junk)
summary(data)
names(data)
library("dplyr")
data$id <- 1:nrow(data)
box_ids <- select(data, id, lat, lon)
atlantis <- readOGR(dsn = "/Users/chris/Dropbox/hi/atlantis/spatial_data/atlantis/", layer = "atlantis_WGS84")
library("sp")
atlantis <- readOGR(dsn = "/Users/chris/Dropbox/hi/atlantis/spatial_data/atlantis/", layer = "atlantis_WGS84")
library("rgdal")
atlantis <- readOGR(dsn = "/Users/chris/Dropbox/hi/atlantis/spatial_data/atlantis/", layer = "atlantis_WGS84")
coords <- data.frame(lon = box_ids$lon, lat = box_ids$lat)
coords_sp <- SpatialPoints(coords, proj4string = CRS("+proj=longlat +datum=WGS84"))
ob <- SpatialPolygons(atlantis@polygons,proj4string=CRS("+proj=longlat +datum=WGS84"))
b_ids <- coords_sp %over% ob
head(b_ids)
row_order <- atlantis@data$box_id
pts_in <- rep(NA,length(b_ids))
for(i in 1:53){
subs <- which(b_ids == i)
pts_in[subs] <- row_order[i]
}
table(pts_in)
getwd()
write.csv(pts_in, file = "nephrops_fix.csv")
pts_in
sur_fix <- data.frame(id = box_ids$id, box_id = pts_in)
write.csv(sur_fix, file = "nephrops_fix.csv")
sur_fix <- data.frame(id = box_ids$id, box_id = pts_in, lat = box_ids$lat, lon = box_ids$lon)
write.csv(sur_fix, file = "nephrops_fix.csv")
?write.csv
write.csv(sur_fix, file = "nephrops_fix.csv", row.names = F)
junk <- data
junk$box_id <- pts_in
junk1 <- junk[! is.na(junk$dypi),]
junk1$mdypi <- junk1$dypi *1.8288 # change fm to meters
junk2 <-  junk1[junk1$mdypi < 400,] # always some errors...
junk2 <-  junk2[junk2$mdypi > 50,] #  always some errors...
junk2$lev <- cut(junk2$mdypi, c(0,  50,  150, 300, 400 ))
summary(junk1 )
table(junk2$box_id)
svaedi <- c(5, 20, 21, 22, 23, 24, 25)  # these value are set up to match jÃ³nas's areas
junk3 <- junk2[junk2$area %in% svaedi, ] # from reg.bc
apply.shrink(junk3$afli, junk3$box_id, sum)
?apply.shrink
table(junk3$box_id)
junk3 <- junk2[junk2$box_id %in% svaedi, ] # from reg.bc
apply.shrink(junk3$afli, junk3$box_id, sum)
apply.shrink(junk3$afli, junk3$lev, sum)
chris <-  apply.shrink(junk3$afli, list(junk3$area, junk3$lev), sum)
chris <-  apply.shrink(junk3$afli, list(junk3$box_id, junk3$lev), sum)
junk3 %>%
group_by(box_id, lev) %>%
summarize(tot = sum(afli))
apply.shrink(junk3$afli, list(junk3$box_id, junk3$lev), sum)
table(junk1$mdypi)
table(junk2$lev)
1162/sum(table(junk2$lev))
catch_dat <- junk3 %>%
group_by(box_id, lev) %>%
summarize(tot = sum(afli))
catch_dat$percent <- catch_dat$tot/sum(catch_dat$tot)
catch_dat
sum(catch_dat$percent)
catch_dat$biomass_tonnes <- catch_dat$percent * 30.940
catch_dat
1e3
catch_dat$biomass_tonnes <- catch_dat$percent * 30.940 * 1e3
catch_dat
sum(catch_dat$biomass_tonnes)
#
# Atlantis maps
#
library(ggplot2) # graphing
library(dplyr)
library(geo)
library(mapproj)
library(rgdal)
atlantis.map <- readOGR(dsn = "Dropbox/hi/atlantis/spatial_data/atlantis/", layer = "atlantis_WGS84")
atlantis.map.tmp <- fortify(atlantis.map)
atlantis.map.tmp$island <- as.character(ifelse(atlantis.map.tmp$id == 51 | atlantis.map.tmp$id == 35, 1, 0))
#bound_boxes <- c(50,49,46:48, 43:45, 36:42)
#matches <- which(atlantis.map.tmp$id %in% bound_boxes)
#atlantis.map.tmp[matches,"island"] = 2
#atlantis.map.tmp$island <- as.factor(atlantis.map.tmp$island)
# Add Greenland
greenland.map <- readOGR(dsn = "Dropbox/hi/atlantis/spatial_data/island/wgs84/", layer = "greenland_poly_WGS84")
greenland.map.tmp <- fortify(greenland.map)
# Add Iceland
island.map <- readOGR(dsn = "Dropbox/hi/atlantis/spatial_data/island/wgs84/", layer = "island_poly_WGS84")
island.map.tmp <- fortify(island.map)
# Add Faroe
faroe.map <- readOGR(dsn = "Dropbox/hi/atlantis/spatial_data/island/wgs84/", layer = "faroe_poly_WGS84")
faroe.map.tmp <- fortify(faroe.map)
head(faroe.map.tmp)
ggplot(data=atlantis.map.tmp, aes(long, lat, group=group)) + geom_polygon(fill = "#0072B2") + geom_path(col = "red") + theme_bw() + xlab("Longitude") + ylab("Latitude") + coord_map() + theme(legend.position="none") + geom_polygon(data = greenland.map.tmp, aes(long, lat, group=group), col = "#999999") + geom_polygon(data = island.map.tmp, aes(long, lat, group=group),col = "#999999") + geom_polygon(data = faroe.map.tmp, aes(long, lat, group=group),col = "#999999")
Reproducible researching using \textbf{knitr}
Reproducible researching using _knitr_
install.package
widescreen: true
- If you don't already know \texit{latex} than I recommend learning Markdown
- If you don't already know LaTeX than I recommend learning Markdown
?knit
?cars
coef(mod1)
mod1 <- lm(dist ~ speed, data = car)
cat("`r <insert R code >`")
x <- cat("`r <insert R code>`
)
""
;
""
x <- cat("`r <insert R code>`")
x
x <- paste("`r <insert R code>`")
x
cat(x)
x
print(x)
mod1 <- lm(dist ~ speed, data = cars)
coef(mod1)
opts_chunk$ste
opts_chunk$set
?opts_chunk
opts_chunk$get()
opts_chunk$get()
opts_chunk$get("prompt")
library(knitr)
opts_chunk$get("engine")
anova(mod1)
library(xtable)
xtable(mod1)
?xtable
summary(mod1)
summary(mod1)$coef
?xtable
coef_tab <- summary(mod1$coef)
coef_tab
coef_tab <- summary(mod1)$coef
coef_tab
coef_tab[1]
rowname(coef_tab)[1]
rowname(coef_tab)[1]
rownames(coef_tab)[1]
coef_tab[1,1]
coef_tab[1,2]
?opts_chunk
?knit_themes
?knit_theme
source('~/.active-rstudio-document', echo=TRUE)
?opts_knit
?opts_knit$set(out.cat("$\hat{\text{dist}_i} = `r coef_tab[1,1]` + `r coef_tab[2,1] ` \text{speed}_i$")
)
cat("$\hat{\text{dist}_i} = `r coef_tab[1,1]` + `r coef_tab[2,1] ` \text{speed}_i$")
cat("$\\hat{\\text{dist}_i} = `r coef_tab[1,1]` + `r coef_tab[2,1] ` \\text{speed}_i$")
library(dplyr)
library(pscl)
load(file = "~/Downloads/ICPSR_34933/DS0001/34933-0001-Data.rda")
dat <- tbl_df(da34933.0001)
table(dat$COCREC)
table(dat$TOTCOKE)
table(dat$COCEVER)
dat$usedcoke <- dat$TOTCOKE
dat[dat$COCEVER[i] == "(2) No",]
never <- which(dat$COCEVER == "(2) No")
dat$usedcoke[never] <- 0
plot(table(dat$usedcoke))
head(dat)
table(dat$IRSEX)
table(dat$IRMARIT)
table(dat$CATAG2)
getwd()
dat$sex <- dat$IRSEX
dat$married <- ifelse(dat$IRMARIT == "(1) Married", "Yes", "No")
table(dat$married)
dat$age <- dat$CATAG2
table(dat$age)
library(pscl)
iszero <- function(x) factor(x < 1,
levels = c(TRUE, FALSE), labels = c("0", "> 0"))
plot(iszero(usedcoke) ~ sex, data = train,ylab="Probability",xlab="Gender")
plot(iszero(usedcoke) ~ sex, data = dat,ylab="Probability",xlab="Gender")
plot(log(usedcoke)~sex,data=dat,subset=(sus>0),xlab="Gender",ylab="log(Suspensions)")
plot(log(usedcoke)~sex,data=dat,subset=(usedcoke>0),xlab="Gender",ylab="log(Suspensions)")
iszero <- function(x) factor(x < 1,
levels = c(TRUE, FALSE), labels = c("0", "> 0"))
plot(iszero(usedcoke) ~ sex, data = dat,ylab="Probability",xlab="Gender")
# plot non-zero perpetrations by education level
plot(log(usedcoke)~sex,data=dat,subset=(usedcoke>0),xlab="Gender",ylab="log(Suspensions)")
levels(dat$sex)
levels(dat$sex) <- c("Male", "Female")
plot(iszero(usedcoke) ~ sex, data = dat,ylab="Probability",xlab="Gender")
# plot non-zero perpetrations by education level
plot(log(usedcoke)~sex,data=dat,subset=(usedcoke>0),xlab="Gender",ylab="log(Suspensions)")
par(mfrow = c(3,2))
plot(iszero(usedcoke) ~ sex, data = dat,ylab="Probability",xlab="Gender")
par(mfrow = c(2,1))
plot(iszero(usedcoke) ~ sex, data = dat,ylab="Probability",xlab="Gender")
plot(iszero(usedcoke) ~ sex, data = dat,ylab="Probability",xlab="Gender")
par(mfrow = c(2,1))
plot(iszero(usedcoke) ~ sex, data = dat,ylab="Probability",xlab="Gender")
plot(log(usedcoke)~sex,data=dat,subset=(usedcoke>0),xlab="Gender",ylab="log(Suspensions)")
par(mfrow = c(1,2))
library(dplyr)
library(pscl)
load(file = "~/Downloads/ICPSR_34933/DS0001/34933-0001-Data.rda")
dat <- tbl_df(da34933.0001)
table(dat$MJYRTOT)
dat$marj <- dat$MJYRTOT
never <- which(dat$MJEVER  == "(2) No")
dat$marj[never] <- 0
plot(table(dat$marj))
dat$sex <- dat$IRSEX
levels(dat$sex) <- c("Male", "Female")
dat$married <- as.factor(ifelse(dat$IRMARIT == "(1) Married", "Yes", "No"))
dat$age <- dat$CATAG2
levels(dat$age) <- c("12-17", "18-25", "26+")
?zeroinfl
zinb_mod <- zeroinfl(marj ~ sex + married + age, data = "dat", dist = "negbin")
zinb_mod <- zeroinfl(marj ~ sex + married + age, data = dat, dist = "negbin")
nbh_mod <- hurdle(marj ~ sex + married + age, data = dat, dist = "negbin")
AIC(zinb_mod)
AIC(nbh_mod)
fitted(zinb_mod)
cor(fitted(zinb_mod), dat$marj)
marj_anal <- subset(dat, select = c("married", "age", "sex", "marj"))
marj_anal <- na.omit(marj_anal)
marj_anal <- subset(dat, select = c("married", "age", "sex", "marj"))
marj_anal <- na.omit(marj_anal)
zinb_mod <- zeroinfl(marj ~ sex + married + age, data = marj_anal, dist = "negbin")
nbh_mod <- hurdle(marj ~ sex + married + age, data = marj_anal, dist = "negbin")
AIC(zinb_mod)
AIC(nbh_mod)
cor(fitted(zinb_mod),marj_anal$marj)
cor(fitted(zinb_mod),marj_anal$marj)^@
cor(fitted(zinb_mod),marj_anal$marj)^2
cor(fitted(nbh_mod),marj_anal$marj)^2
summary(zinb_mod)$coef
summary(nbh_mod)$coef
library(xtable)
?xtable
?print.xtable
print(xtable(summary(zinb_mod)$coef),type = "html")
xtable(summary(zinb_mod)$coef)
print(xtable(summary(zinb_mod)$coef$count),type = "html")
print(xtable(summary(zinb_mod)$coef$count),type = "html")
print(xtable(summary(zinb_mod)$coef$count),file = "zcount.html",type = "html")
print(xtable(summary(zinb_mod)$coef$zero),file = "zzero.html",type = "html")
print(xtable(summary(nbh_mod)$coef$count),file = "ncount.html",type = "html")
print(xtable(summary(nbh_mod)$coef$zero),file = "nzero.html",type = "html")
summary(nbh_mod)$coef
exp(-1.127)
AIC(zinb_mod); AIC(nbh_mod)
cor(fitted(zinb_mod),marj_anal$marj)^2; cor(fitted(nbh_mod),marj_anal$marj)^2
mean(marj_anal$marj == 0)
table(iszer(marj_anal$marj))
table(iszero(marj_anal$marj))
iszero <- function(x) factor(x < 1,
levels = c(TRUE, FALSE), labels = c("0", "> 0"))
table(iszero(marj_anal$marj))
25156/(25156+9673)
mean(marj_anal$marj)
sd(marj_anal$marj)
nrow(marj_anal)
34829/4
exp(-1.13)
cite("pscl")
citation("pscl")
450/200
if(!require("shiny"))
install.packages("shiny")
demo("notebook", package = "knitr")
0/12
12/0
12/a
a
b
plot(dist~speed, data = cars)
plot(dist~speed, data = cars, type = "l")
library("ggplot2")
qplot(dist, speed, cars) + geom_smooth()
ggplot(aes(dist, speed), cars) + geom_smooth()
ggplot(aes(dist, speed, data = cars)) + geom_smooth()
?ggplot
ggplot(aes(x = dist, y = speed), data = cars) + geom_smooth()
ggplot(aes(x = dist, y = speed), data = cars) + geom_smooth() + geom_points(col = "red")
ggplot(aes(x = dist, y = speed), data = cars) + geom_smooth() + geom_point(col = "red")
```{r cool_chunk, eval = -2, echo = FALSE, results = "asis}
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("httpuv")
?cars
version(knitr)
version("knitr")
version
package_version(knitr)
package_version("knitr")
?knitr
install.packages("knitr")
install.packages("knitr")
git clone https://github.com/yihui/knitr.git
install.packages("formatR")
install.packages("pandoc")
foo <- 2
bar <- foo
foo > bar
mod1 <- lm(dist ~ speed, data = cars)
coef_tab <- summary(mod1)$coef
print(xtable(mod1), type = "html")
coef_tab
library(ggvis)
install.packages("ggvis")
install.packages("ggvis")
library(ggvis)
mtcars %>% ggvis(x = ~wt, y = ~mpg, stroke := "red") %>% layer_points()
if(!require("shiny"))
install.packages("shiny")
demo("notebook", package = "knitr")
1 + "a"
1+a
x <- dnorm(0, -1)
x
?dnorm
x <- dnorm(0, sd = -1)
x
dnorm(0, sd = -1)
if(!require("shiny"))
install.packages("shiny")
demo("notebook", package = "knitr")
norm_rv <- rnorm(4)
chi_rv <- sum(norm_rv^2)
chi_rv
getwd()
setwd("Github/Presentations/knitr_IcelandRUG_25sept2014/")
stitch(toy.R)
stitch(script = "toy.R")
knit("knit_toy/knit_toy.Rnw")
purl("knit_toy/knit_toy.Rnw")
stitch("stitch_toy/stitch_toy.R")
spin("spin_toy/spin_toy.R")
